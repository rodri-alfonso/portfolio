---
import Page from 'layouts/Page.astro'
import Section from 'layouts/Section.astro'
import Title from 'theme/typography/Title.astro'
import BigText from 'theme/typography/BigText.astro'
import Experience from 'components/sections/Experience.astro'
import Projects from 'components/sections/Projects.astro'
---

<Page
	title='Rodrigo Alfonso | Frontend Engineer & UI Developer'
	description='<strong>Rodrigo Alfonso.</strong> I build efficient user interfaces and <strong>reusable systems.</strong> I mainly focusing on being the nexus of interface design and development <strong>to provide the best user experience</strong> between functionality and "look and feel".'
	class='container'
>
	<Section sectionId='about' title='' class='content'>
		<Title>Hello, I am <mark>Rodrigo.</mark></Title>
		<BigText light>Frontend Engineer - UI Developer</BigText>
	</Section>
	<Experience />
	<Projects />
</Page>

<script>
	import { debounce } from 'utils'

	const sectionsRef = Array.from(document.querySelectorAll('[section-query]')) as Array<HTMLElement>

	let prevAnchorRef: HTMLAnchorElement | null
	let prevId: string = ''

	function handleObserver(entries: any) {
		debounce(() => {
			entries.forEach((entry: any) => {
				let id = entry.target.attributes['section-query'].value

				if (entry.intersectionRatio < 0.52) return
				if (prevId === id) return

				const anchorRef = document.getElementById(`link-${id}`) as HTMLAnchorElement
				// window.history.replaceState(null, '', '#' + id)

				if (prevAnchorRef) prevAnchorRef.classList.remove('active')
				anchorRef.classList.add('active')

				prevAnchorRef = anchorRef
				prevId = id
			})
		}, 160)
	}

	const observer = new IntersectionObserver(handleObserver, {
		threshold: Array.from({ length: 80 }, (_, x) => x / 80),
		rootMargin: `0px 0px -60px 0px`,
	})

	for (let section of sectionsRef) {
		observer.observe(section)
	}
</script>

<style>
	.container {
		display: grid;
		gap: 8rem;
	}
	.content {
		gap: 1rem;
		padding: 5rem 0 10rem 0;
		position: relative;
		z-index: -1;
		top: 10rem;
		left: 5rem;
		width: 100%;
		margin-bottom: 30rem;
	}

	.content:before {
		margin-top: 10rem;
		height: auto;
	}

	mark {
		color: var(--color-primary);
		background-color: unset;
	}

	@media (max-width: 80em) {
		.content {
			position: static;
		}
	}
</style>
